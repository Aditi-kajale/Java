// design 3 scrollbars to manipulate basic colours proportion Red, Green & Blue and
// create a new color which will be applied to applet's background
import java.applet.*;
import java.awt.*;  // Scrollbar class
import java.awt.event.*;  // AdjustmentEvent class, AdjustmentListener interface

/* <applet code="Prog96.class" width="500" height="500">
</applet> */

public class Prog96 extends Applet implements AdjustmentListener
{
	Scrollbar hsbr, hsbb, hsbg;

	public void init()
	{
		hsbr = new Scrollbar(Scrollbar.HORIZONTAL,0,1,0,256);
		// 1st is orientation of scrollbar
		// 2nd is default value
		// 3rd is increment/decrement value
		// 4th is min value
		// 5th is max value + 1
		hsbg = new Scrollbar(Scrollbar.HORIZONTAL,0,1,0,256);
		hsbb = new Scrollbar(Scrollbar.HORIZONTAL,0,1,0,256);

		// if we add the components i.e. scrollbars to applet window,
		// the autolayout is auto used by JRE which decides the size and
		// placement of each component which may not be desirable
		setLayout(null);   // manual layout

		// now here we need to decide the size & placement of every 
		// component
		hsbr.setBounds(150,95,200,40);  // left,top,width,height
		hsbg.setBounds(150,230,200,40);
		hsbb.setBounds(150,365,200,40);

		add(hsbr);
		add(hsbg);
		add(hsbb);

		setBackground(new Color(0,0,0));  // same as
		// setBackground(Color.BLACK);
		// register the scrollbars for events
		hsbr.addAdjustmentListener(this);
		hsbg.addAdjustmentListener(this);
		hsbb.addAdjustmentListener(this);
	}

	// compulsory to override the abstract method of AdjustmentListener
	public void adjustmentValueChanged(AdjustmentEvent ae)
	{
		// The getValue() of Scrollbar class object returns the value
		// generated by scrollbar
		int r, g, b;
		r = hsbr.getValue();
		g = hsbg.getValue();
		b = hsbb.getValue();
		setBackground(new Color(r,g,b));
	}
}